---
import { type CollectionEntry, getCollection, render } from "astro:content";
import PageLayout from "@/layouts/Base.astro";
import DetailLayout from "@/components/DetailLayout.astro";
import { getRelatedSoftware } from "@/data/software";

export async function getStaticPaths() {
  const software = await getCollection("software", ({ data }) => {
    // In production, exclude drafts. In development, show all.
    return import.meta.env.PROD ? data.draft !== true : true;
  });
  return software.map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

type Props = {
  entry: CollectionEntry<"software">;
};

const { entry } = Astro.props;
const { Content } = await render(entry);
const { data } = entry;

// Get related software
const relatedSoftware = await getRelatedSoftware(entry, 3);

const meta = {
  title: `${data.name} - Software Platform`,
  description: data.description,
};
---

<PageLayout meta={meta}>
  <DetailLayout type="software" data={data} relatedItems={relatedSoftware}>
    <Content />
  </DetailLayout>
</PageLayout>
