---
import PageLayout from "@/layouts/Base.astro";
import Section from "@/components/Section.astro";
import EventCard from "@/components/EventCard.astro";
import FeatureCard from "@/components/FeatureCard.astro";
import { Icon } from "astro-icon/components";
import {
  getAllEvents,
  getUpcomingEvents,
  getPastEvents,
  getCurrentEvents,
  getFeaturedEvents,
  getEventCountByType,
  getUniqueEventTopics,
  groupEventsByMonth,
} from "@/data/events";

const meta = {
  title: "Events",
  description:
    "Conferences, workshops, and training events for the human-robot interaction community",
};

// Fetch events from content collections
const allEvents = await getAllEvents();
const upcomingEvents = await getUpcomingEvents();
const pastEvents = await getPastEvents();
const currentEvents = await getCurrentEvents();
const featuredEvents = await getFeaturedEvents();
const eventTypeCounts = await getEventCountByType();
// Get event types from actual events
const eventTypes = [...new Set(allEvents.map((e) => e.data.type))];

// Get current year for grouping
const currentYear = new Date().getFullYear();
const nextYear = currentYear + 1;

// Group upcoming events by year
const upcomingEventsByYear: Record<number, typeof upcomingEvents> = {};
upcomingEvents.forEach((event) => {
  const year = event.data.startDate.getFullYear();
  if (!upcomingEventsByYear[year]) {
    upcomingEventsByYear[year] = [];
  }
  upcomingEventsByYear[year].push(event);
});

// Get recent past events (last 6 months)
const sixMonthsAgo = new Date();
sixMonthsAgo.setMonth(sixMonthsAgo.getMonth() - 6);
const recentPastEvents = pastEvents.filter(
  (event) => event.data.endDate >= sixMonthsAgo,
);

// Event type info for display
const eventTypeInfo: Record<
  string,
  { icon: string; color: string; description: string }
> = {
  conference: {
    icon: "solar:users-group-two-rounded-line-duotone",
    color: "text-blue-500",
    description: "Major academic and industry conferences",
  },
  workshop: {
    icon: "solar:presentation-graph-line-duotone",
    color: "text-green-500",
    description: "Hands-on workshops and tutorials",
  },
  symposium: {
    icon: "solar:chat-round-dots-line-duotone",
    color: "text-purple-500",
    description: "Focused symposia on specific topics",
  },
  summit: {
    icon: "solar:ranking-line-duotone",
    color: "text-orange-500",
    description: "High-level summits and leadership meetings",
  },
  training: {
    icon: "solar:graduation-cap-line-duotone",
    color: "text-red-500",
    description: "Professional training and certification",
  },
  meetup: {
    icon: "solar:map-point-wave-line-duotone",
    color: "text-indigo-500",
    description: "Local community meetups",
  },
  webinar: {
    icon: "solar:monitor-smartphone-line-duotone",
    color: "text-teal-500",
    description: "Online webinars and virtual events",
  },
  competition: {
    icon: "solar:cup-star-line-duotone",
    color: "text-yellow-500",
    description: "Robotics competitions and challenges",
  },
};

const services = [
  {
    icon: "solar:calendar-mark-line-duotone",
    title: "Event Organization",
    description: "Full-service conference and workshop planning",
  },
  {
    icon: "solar:ticket-line-duotone",
    title: "Registration Management",
    description: "Streamlined registration and ticketing services",
  },
  {
    icon: "solar:video-frame-play-horizontal-line-duotone",
    title: "Hybrid Events",
    description: "Combined in-person and virtual event hosting",
  },
  {
    icon: "solar:speaker-line-duotone",
    title: "Speaker Coordination",
    description: "Expert speaker recruitment and management",
  },
  {
    icon: "solar:users-group-rounded-line-duotone",
    title: "Community Building",
    description: "Networking and community engagement activities",
  },
  {
    icon: "solar:medal-ribbons-star-line-duotone",
    title: "Sponsorships",
    description: "Sponsorship packages and partnership opportunities",
  },
];
---

<PageLayout meta={meta}>
  <h1 class="title mb-6">Events</h1>

  <!-- Hero Section with CTAs -->
  <Section id="events-cta">
    <div class="max-w-4xl mx-auto text-center mb-12">
      <p class="text-lg mb-8 text-color-600 dark:text-color-400">
        Connect, learn, and advance HRI through conferences, workshops, and
        community gatherings worldwide.
      </p>

      <!-- CTA Buttons -->
      <div class="flex flex-wrap justify-center gap-4 mb-8">
        <a
          href="#upcoming"
          class="inline-flex items-center justify-center h-12 px-8 text-base font-semibold rounded-lg shadow-lg hover:brightness-110 transition-all gradient-brand-horizontal text-surface"
        >
          <Icon name="solar:calendar-line-duotone" class="w-5 h-5 mr-2" />
          View Upcoming Events
        </a>
        <a
          href="/get-involved"
          class="inline-flex items-center justify-center h-12 px-8 text-base font-semibold rounded-lg border-2 border-accent-one hover:bg-accent-one/10 transition-all"
        >
          <Icon name="solar:add-square-line-duotone" class="w-5 h-5 mr-2" />
          Host an Event
        </a>
      </div>

      <!-- Event Statistics -->
      <div class="flex flex-wrap justify-center gap-6 text-sm">
        {
          upcomingEvents.length > 0 && (
            <div class="flex items-center gap-2">
              <span class="w-3 h-3 bg-green-500 rounded-full animate-pulse" />
              <span>{upcomingEvents.length} Upcoming</span>
            </div>
          )
        }
        {
          currentEvents.length > 0 && (
            <div class="flex items-center gap-2">
              <span class="w-3 h-3 bg-blue-500 rounded-full animate-pulse" />
              <span>{currentEvents.length} Ongoing</span>
            </div>
          )
        }
        <div class="flex items-center gap-2">
          <span class="w-3 h-3 bg-gray-400 rounded-full"></span>
          <span>{allEvents.length} Total Events</span>
        </div>
        {
          Object.keys(eventTypeCounts).length > 0 && (
            <div class="flex items-center gap-2">
              <Icon
                name="solar:layers-line-duotone"
                class="w-4 h-4 text-accent-two"
              />
              <span>{eventTypes.length} Event Types</span>
            </div>
          )
        }
      </div>
    </div>
  </Section>

  <!-- Current/Ongoing Events (if any) -->
  {
    currentEvents.length > 0 && (
      <Section
        id="current"
        title="Happening Now"
        subtitle="Events currently in progress"
      >
        <div class="max-w-5xl mx-auto">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            {currentEvents.map((event) => (
              <div class="relative p-6 bg-gradient-to-r from-accent-one/10 to-accent-two/10 rounded-lg border border-accent-one/20">
                <div class="absolute top-4 right-4">
                  <span class="flex items-center gap-1 text-xs px-2 py-1 bg-green-500/20 text-green-700 dark:text-green-300 rounded-full">
                    <span class="w-2 h-2 bg-green-500 rounded-full animate-pulse" />
                    Live Now
                  </span>
                </div>
                <EventCard
                  name={event.data.name}
                  date={event.data.startDate.toLocaleDateString("en-US", {
                    month: "short",
                    day: "numeric",
                    year: "numeric",
                  })}
                  location={
                    event.data.location
                      ? `${event.data.location.city}, ${event.data.location.country}`
                      : undefined
                  }
                  description={event.data.description}
                  link={event.data.links?.website}
                  type="conference"
                />
              </div>
            ))}
          </div>
        </div>
      </Section>
    )
  }

  <!-- Featured Events -->
  {
    featuredEvents.length > 0 && (
      <Section
        id="featured"
        title="Featured Events"
        subtitle="Don't miss these highlighted opportunities"
      >
        <div class="max-w-6xl mx-auto">
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {featuredEvents.slice(0, 6).map((event) => (
              <EventCard
                name={event.data.name}
                date={event.data.startDate.toLocaleDateString("en-US", {
                  month: "short",
                  day: "numeric",
                  year: "numeric",
                })}
                dateRange={
                  event.data.endDate &&
                  event.data.endDate.getTime() !==
                    event.data.startDate.getTime()
                    ? `${event.data.startDate.toLocaleDateString("en-US", {
                        month: "short",
                        day: "numeric",
                      })} - ${event.data.endDate.toLocaleDateString("en-US", {
                        month: "short",
                        day: "numeric",
                      })}, ${event.data.startDate.getFullYear()}`
                    : undefined
                }
                location={
                  event.data.location
                    ? `${event.data.location.city}, ${event.data.location.country}`
                    : undefined
                }
                description={event.data.description}
                link={`/events/${event.id}`}
                type={event.data.type}
              />
            ))}
          </div>
        </div>
      </Section>
    )
  }

  <!-- Upcoming Events -->
  {
    upcomingEvents.length > 0 && (
      <Section
        id="upcoming"
        title="Upcoming Events"
        subtitle="Plan ahead for these future gatherings"
      >
        <div class="max-w-5xl mx-auto">
          {Object.keys(upcomingEventsByYear)
            .sort()
            .map((year) => (
              <div class="mb-8">
                <h3 class="text-2xl font-semibold mb-4 gradient-brand-text">
                  {year}
                </h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {upcomingEventsByYear[Number(year)]?.map((event) => (
                    <EventCard
                      name={event.data.name}
                      date={event.data.startDate.toLocaleDateString("en-US", {
                        month: "short",
                        day: "numeric",
                        year: "numeric",
                      })}
                      dateRange={
                        event.data.endDate &&
                        event.data.endDate.getTime() !==
                          event.data.startDate.getTime()
                          ? `${event.data.startDate.toLocaleDateString(
                              "en-US",
                              {
                                month: "short",
                                day: "numeric",
                              },
                            )} - ${event.data.endDate.toLocaleDateString(
                              "en-US",
                              {
                                month: "short",
                                day: "numeric",
                                year: "numeric",
                              },
                            )}`
                          : undefined
                      }
                      location={
                        event.data.location
                          ? `${event.data.location.city}, ${event.data.location.country}`
                          : undefined
                      }
                      description={event.data.description}
                      link={event.data.links?.website}
                      type="conference"
                    />
                  ))}
                </div>
              </div>
            ))}
        </div>
      </Section>
    )
  }

  <!-- Event Types -->
  {
    eventTypes.length > 0 && (
      <Section
        id="event-types"
        title="Event Types"
        subtitle="Diverse formats for learning and collaboration"
      >
        <div class="max-w-6xl mx-auto">
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            {eventTypes.map((type: string) => {
              const info = eventTypeInfo[type] || {
                icon: "solar:calendar-line-duotone",
                color: "text-gray-500",
                description: "Events in this category",
              };
              const count = eventTypeCounts[type] || 0;

              return (
                <FeatureCard
                  icon={info?.icon || "solar:calendar-line-duotone"}
                  title={type}
                  class="capitalize"
                >
                  <p class="text-xs text-accent-one mb-1">
                    {count} {count === 1 ? "Event" : "Events"}
                  </p>
                  <p class="text-xs text-color-600 dark:text-color-400">
                    {info.description}
                  </p>
                </FeatureCard>
              );
            })}
          </div>
        </div>
      </Section>
    )
  }

  <!-- Services Section -->
  <Section
    id="services"
    title="Event Services"
    subtitle="Professional support for organizing successful HRI events"
  >
    <div class="max-w-6xl mx-auto">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          services.map((service) => (
            <FeatureCard
              icon={service.icon}
              title={service.title}
              description={service.description}
            />
          ))
        }
      </div>
    </div>
  </Section>

  <!-- Recent Past Events -->
  {
    recentPastEvents.length > 0 && (
      <Section
        id="recent-past"
        title="Recent Events"
        subtitle="Events from the past 6 months"
      >
        <div class="max-w-4xl mx-auto">
          <div class="grid grid-cols-1 gap-4">
            {recentPastEvents.slice(0, 5).map((event) => (
              <EventCard
                name={event.data.name}
                date={event.data.startDate.toLocaleDateString("en-US", {
                  month: "short",
                  day: "numeric",
                  year: "numeric",
                })}
                location={
                  event.data.location
                    ? `${event.data.location.city}, ${event.data.location.country}`
                    : undefined
                }
                description={event.data.description}
                link={`/events/${event.id}`}
                type={event.data.type}
                isPast={true}
              />
            ))}
          </div>
          {recentPastEvents.length > 5 && (
            <div class="mt-4 text-center">
              <a
                href="/events/archive"
                class="inline-flex items-center gap-2 text-sm text-link hover:underline"
              >
                View all past events
                <Icon name="solar:arrow-right-line-duotone" class="w-4 h-4" />
              </a>
            </div>
          )}
        </div>
      </Section>
    )
  }

  <!-- Call to Action -->
  <Section id="events-contribute">
    <div class="max-w-4xl mx-auto text-center">
      <h2 class="text-3xl font-bold mb-4">Host Your Event</h2>
      <p class="text-lg mb-8 text-color-600 dark:text-color-400">
        Planning an HRI conference, workshop, or community gathering? Partner
        with us to reach the global HRI community.
      </p>
      <div class="flex flex-wrap justify-center gap-4">
        <a
          href="/get-involved"
          class="inline-flex items-center justify-center h-12 px-8 text-base font-semibold rounded-lg shadow-lg hover:brightness-110 transition-all gradient-brand-horizontal text-surface"
        >
          <Icon name="solar:add-circle-line-duotone" class="w-5 h-5 mr-2" />
          Submit Event
        </a>
        <a
          href="/partners"
          class="inline-flex items-center justify-center h-12 px-8 text-base font-semibold rounded-lg border-2 border-special hover:bg-special/10 transition-all"
        >
          <Icon name="solar:hand-shake-line-duotone" class="w-5 h-5 mr-2" />
          Become a Partner
        </a>
      </div>
    </div>
  </Section>
</PageLayout>
