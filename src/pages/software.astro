---
import PageLayout from "@/layouts/Base.astro";
import Section from "@/components/Section.astro";
import ProductCard from "@/components/ProductCard.astro";
import FeatureCard from "@/components/FeatureCard.astro";
import { Icon } from "astro-icon/components";
import {
  getAllSoftware,
  getSoftwareCountByStatus,
  getSoftwareCountByCategory,
  getUniqueCategories,
} from "@/data/software";

const meta = {
  title: "Software",
  description:
    "Open-source software tools and frameworks for human-robot interaction research and development",
};

// Fetch software from content collections
const allSoftware = await getAllSoftware();
const statusCounts = await getSoftwareCountByStatus();
const categoryCounts = await getSoftwareCountByCategory();
const categories = await getUniqueCategories();

// Transform software data for ProductCard component
const products = allSoftware.map((sw) => ({
  name: sw.data.name,
  type: "software" as const,
  description: sw.data.shortDescription,
  status:
    sw.data.status === "stable"
      ? ("available" as const)
      : sw.data.status === "beta"
        ? ("beta" as const)
        : sw.data.status === "alpha"
          ? ("experimental" as const)
          : sw.data.status === "experimental"
            ? ("experimental" as const)
            : ("coming-soon" as const),
  badge: sw.data.status,
  features: sw.data.features?.slice(0, 3) || [],
  links: {
    primary: {
      label:
        sw.data.status === "stable"
          ? "Get Started"
          : sw.data.status === "beta"
            ? "Try Beta"
            : sw.data.status === "alpha"
              ? "Try Alpha"
              : "Learn More",
      url: `/software/${sw.id}`,
    },
    ...(sw.data.links?.github && { github: sw.data.links.github }),
    ...(sw.data.links?.documentation && { docs: sw.data.links.documentation }),
    ...(sw.data.links?.demo && { demo: sw.data.links.demo }),
  },
}));

const services = [
  {
    icon: "solar:code-2-line-duotone",
    title: "Research-to-Production",
    subtitle: "Code Translation",
    description:
      "Transform research prototypes into production-ready systems with industry best practices",
  },
  {
    icon: "hugeicons:user-group",
    title: "Community Pool",
    subtitle: "Open Source Bounties",
    description:
      "Contribute to open projects and earn rewards for solving community challenges",
  },
  {
    icon: "solar:shield-check-line-duotone",
    title: "Quality Assurance",
    subtitle: "Testing & Validation",
    description:
      "Comprehensive testing frameworks designed for robotics applications",
  },
  {
    icon: "solar:document-line-duotone",
    title: "Documentation",
    subtitle: "Technical Writing",
    description: "Clear, comprehensive documentation for all software projects",
  },
  {
    icon: "solar:square-academic-cap-line-duotone",
    title: "Training",
    subtitle: "Workshops & Tutorials",
    description: "Learn best practices for developing HRI software systems",
  },
  {
    icon: "solar:rocket-line-duotone",
    title: "Deployment",
    subtitle: "Cloud & Edge Support",
    description:
      "Deploy your robotics software anywhere, from cloud to edge devices",
  },
];

// Get category display names and icons
const categoryInfo: Record<
  string,
  { name: string; icon: string; description: string }
> = {
  framework: {
    name: "Frameworks",
    icon: "solar:structure-line-duotone",
    description: "Complete development frameworks for building HRI systems",
  },
  library: {
    name: "Libraries",
    icon: "solar:book-2-line-duotone",
    description: "Reusable components and modules for robotics applications",
  },
  tool: {
    name: "Tools",
    icon: "solar:settings-minimalistic-line-duotone",
    description: "Development and analysis tools for robotics research",
  },
  simulation: {
    name: "Simulations",
    icon: "solar:cpu-bolt-line-duotone",
    description: "Virtual environments for testing and validation",
  },
  dataset: {
    name: "Datasets",
    icon: "solar:database-line-duotone",
    description: "Curated data collections for training and evaluation",
  },
  model: {
    name: "Models",
    icon: "solar:brain-line-duotone",
    description: "Pre-trained models for perception and behavior",
  },
};
---

<PageLayout meta={meta}>
  <h1 class="title mb-6">Software</h1>

  <!-- Hero Section with CTAs -->
  <Section id="software-cta">
    <div class="max-w-4xl mx-auto text-center mb-12">
      <p class="text-lg mb-8 text-color-600 dark:text-color-400">
        Open-source tools and frameworks designed to accelerate human-robot
        interaction research and enable reproducible science.
      </p>

      <!-- CTA Buttons -->
      <div class="flex flex-wrap justify-center gap-4 mb-8">
        <a
          href="#products"
          class="inline-flex items-center justify-center h-12 px-8 text-base font-semibold rounded-lg shadow-lg hover:brightness-110 transition-all gradient-brand-horizontal text-surface"
        >
          <Icon name="solar:play-bold" class="w-5 h-5 mr-2" />
          Explore Software
        </a>
        <a
          href="/get-involved"
          class="inline-flex items-center justify-center h-12 px-8 text-base font-semibold rounded-lg border-2 border-accent-one hover:bg-accent-one/10 transition-all"
        >
          <Icon name="mdi:github" class="w-5 h-5 mr-2" />
          Contribute
        </a>
      </div>

      <!-- Software Statistics -->
      {
        Object.keys(statusCounts).length > 0 && (
          <div class="flex flex-wrap justify-center gap-6 text-sm">
            {(statusCounts.stable ?? 0) > 0 && (
              <div class="flex items-center gap-2">
                <span class="w-3 h-3 bg-green-500 rounded-full" />
                <span>{statusCounts.stable} Stable</span>
              </div>
            )}
            {(statusCounts.beta ?? 0) > 0 && (
              <div class="flex items-center gap-2">
                <span class="w-3 h-3 bg-blue-500 rounded-full" />
                <span>{statusCounts.beta} Beta</span>
              </div>
            )}
            {(statusCounts.alpha ?? 0) > 0 && (
              <div class="flex items-center gap-2">
                <span class="w-3 h-3 bg-yellow-500 rounded-full" />
                <span>{statusCounts.alpha} Alpha</span>
              </div>
            )}
            {(statusCounts.experimental ?? 0) > 0 && (
              <div class="flex items-center gap-2">
                <span class="w-3 h-3 bg-orange-500 rounded-full" />
                <span>{statusCounts.experimental} Experimental</span>
              </div>
            )}
          </div>
        )
      }
    </div>
  </Section>

  <!-- Categories Overview -->
  {
    categories.length > 0 && (
      <Section
        id="categories"
        title="Software Categories"
        subtitle="Explore our software organized by type and purpose"
      >
        <div class="max-w-6xl mx-auto">
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {categories.map((category) => {
              const info = categoryInfo[category] || {
                name: category,
                icon: "solar:folder-line-duotone",
                description: "Software in this category",
              };
              const count = categoryCounts[category] || 0;

              return (
                <FeatureCard
                  icon={info.icon}
                  title={info.name}
                  description={`${count} ${count === 1 ? "Package" : "Packages"} • ${info.description}`}
                />
              );
            })}
          </div>
        </div>
      </Section>
    )
  }

  <!-- Products Section -->
  <Section
    id="products"
    title="Our Software"
    subtitle="Comprehensive tools for every aspect of HRI development"
  >
    <div class="max-w-6xl mx-auto">
      {
        products.length > 0 ? (
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            {products.map((product) => (
              <ProductCard {...product} />
            ))}
          </div>
        ) : (
          <div class="text-center py-12">
            <Icon
              name="solar:code-2-line-duotone"
              class="w-24 h-24 mx-auto mb-4 text-color-300"
            />
            <p class="text-lg text-color-600 dark:text-color-400">
              Software packages coming soon! Check back later for updates.
            </p>
          </div>
        )
      }
    </div>
  </Section>

  <!-- Services Section -->
  <Section
    id="services"
    title="Our Services"
    subtitle="Supporting the transition from research to real-world deployment"
  >
    <div class="max-w-6xl mx-auto">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          services.map((service) => (
            <FeatureCard
              icon={service.icon}
              title={service.title}
              description={`${service.subtitle} • ${service.description}`}
            />
          ))
        }
      </div>
    </div>
  </Section>

  <!-- Call to Action -->
  <Section id="software-contribute">
    <div class="max-w-4xl mx-auto text-center">
      <h2 class="text-3xl font-bold mb-4">Contribute Your Software</h2>
      <p class="text-lg mb-8 text-color-600 dark:text-color-400">
        Have software that could benefit the HRI community? We're always looking
        for new tools and frameworks to support.
      </p>
      <div class="flex flex-wrap justify-center gap-4">
        <a
          href="/get-involved"
          class="inline-flex items-center justify-center h-12 px-8 text-base font-semibold rounded-lg shadow-lg hover:brightness-110 transition-all gradient-brand-horizontal text-surface"
        >
          <Icon name="solar:add-circle-line-duotone" class="w-5 h-5 mr-2" />
          Submit Software
        </a>
        <a
          href="https://github.com/semio-robotics"
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center justify-center h-12 px-8 text-base font-semibold rounded-lg border-2 border-special hover:bg-special/10 transition-all"
        >
          <Icon name="mdi:github" class="w-5 h-5 mr-2" />
          View on GitHub
        </a>
      </div>
    </div>
  </Section>
</PageLayout>
