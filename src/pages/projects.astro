---
import PageLayout from "@/layouts/Base.astro";
import Section from "@/components/Section.astro";
import ItemCard from "@/components/ItemCard.astro";
import StudyCard from "@/components/StudyCard.astro";
import CallToActionButton from "@/components/CallToActionButton.astro";
import { Icon } from "astro-icon/components";
import { getAllHardware, getHardwareCountByStatus } from "@/data/hardware";
import { getAllSoftware, getSoftwareCountByStatus } from "@/data/software";
import { getFeaturedStudies, getStudyStatistics } from "@/data/studies";
import { getFormattedAuthors } from "@/data/people";

const meta = {
  title: "Projects",
  description:
    "Explore community-driven robotics hardware platforms, open-source software tools, and reproducible research studies advancing human-robot interaction",
};

// Fetch hardware from content collections
const allHardware = await getAllHardware();
const hardwareCounts = await getHardwareCountByStatus();

// Fetch software from content collections
const allSoftware = await getAllSoftware();
const softwareCounts = await getSoftwareCountByStatus();

// Fetch studies data
const featuredStudies = await getFeaturedStudies();
const studyStatistics = await getStudyStatistics();

// Transform hardware data for ItemCard component
const hardwareProducts = allHardware.map((hw) => ({
  title: hw.data.name,
  type: "hardware" as const,
  description: hw.data.shortDescription,
  status: hw.data.status,
  featured: hw.data.featured,
  href: `/hardware/${hw.id}`,
  ...(hw.data.images?.hero && { image: hw.data.images.hero }),
  links: {
    ...(hw.data.links?.github && { github: hw.data.links.github }),
    ...(hw.data.links?.documentation && { docs: hw.data.links.documentation }),
  },
}));

// Transform software data for ItemCard component
const softwareProducts = allSoftware.map((sw) => ({
  title: sw.data.name,
  type: "software" as const,
  description: sw.data.shortDescription,
  status: sw.data.status === "stable" ? "stable" : sw.data.status,
  featured: sw.data.featured,
  href: `/software/${sw.id}`,
  ...(sw.data.images?.hero && { image: sw.data.images.hero }),
  ...(sw.data.logo && !sw.data.images?.hero && { imageUrl: sw.data.logo }),
  links: {
    ...(sw.data.links?.github && { github: sw.data.links.github }),
    ...(sw.data.links?.documentation && { docs: sw.data.links.documentation }),
    ...(sw.data.links?.demo && { demo: sw.data.links.demo }),
  },
}));

// Pre-fetch author names for featured studies
const featuredStudiesWithAuthors = await Promise.all(
  featuredStudies.slice(0, featuredStudies.length).map(async (study) => ({
    ...study,
    authorString: await getFormattedAuthors(study.data.authors, 1),
  })),
);
---

<PageLayout meta={meta}>
  <!-- <h1 class="title mb-6">Projects</h1> -->

  <!-- Hero Section -->
  <Section id="projects-hero">
    <div class="max-w-4xl mx-auto text-center mb-12">
      <p class="text-lg mb-8 text-color-600 dark:text-color-400">
        Discover and contribute to our growing ecosystem of community-driven
        robotics hardware, software, and research studies.
      </p>
      <div class="flex flex-wrap justify-center gap-4 mb-8">
        <CallToActionButton
          href="#hardware"
          text="Hardware Projects"
          size="large"
        />
        <CallToActionButton
          href="#software"
          text="Software Projects"
          size="large"
          variant="secondary"
        />
        <CallToActionButton
          href="#studies"
          text="Research Projects"
          size="large"
          variant="tertiary"
        />
      </div>

      <!-- Project Statistics -->
      <div class="flex flex-wrap justify-center gap-8 text-sm">
        {
          Object.keys(hardwareCounts).length > 0 && (
            <div class="flex items-center gap-2">
              <Icon
                name="solar:cpu-bolt-line-duotone"
                class="w-5 h-5 text-accent-one"
              />
              <span>{allHardware.length} Hardware Projects</span>
            </div>
          )
        }
        {
          allSoftware.length > 0 && (
            <div class="flex items-center gap-2">
              <Icon
                name="solar:code-2-line-duotone"
                class="w-5 h-5 text-accent-two"
              />
              <span>{allSoftware.length} Software Projects</span>
            </div>
          )
        }
        {
          studyStatistics && (
            <div class="flex items-center gap-2">
              <Icon
                name="solar:document-text-line-duotone"
                class="w-5 h-5 text-special"
              />
              <span>{studyStatistics.total} Research Projects</span>
            </div>
          )
        }
      </div>
    </div>
  </Section>

  <!-- Hardware Section -->
  <Section
    id="hardware"
    title="Hardware Projects"
    subtitle="Open-source robotics hardware for research and education"
  >
    <div class="max-w-6xl mx-auto">
      {
        hardwareProducts.length > 0 ? (
          <div data-expandable-section data-initial-count="6">
            <div
              class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
              data-items-container
            >
              {hardwareProducts.map((product, index) => (
                <div
                  data-expandable-item
                  data-index={index}
                  class={index >= 6 ? "hidden" : ""}
                >
                  <ItemCard {...product} />
                </div>
              ))}
            </div>
            {hardwareProducts.length > 6 && (
              <div class="text-center mt-8">
                <button
                  data-expand-button
                  class="inline-flex items-center gap-2 px-6 py-3 bg-accent-base/10 hover:bg-accent-base/20 rounded-lg font-medium text-accent-base transition-all"
                >
                  <span data-expand-text>
                    View All {hardwareProducts.length} Platforms
                  </span>
                  <span data-collapse-text class="hidden">
                    Show Less
                  </span>
                  <Icon
                    name="solar:alt-arrow-down-line-duotone"
                    class="w-4 h-4 transition-transform"
                    data-expand-icon
                  />
                </button>
              </div>
            )}
          </div>
        ) : (
          <div class="text-center py-12">
            <Icon
              name="solar:box-minimalistic-line-duotone"
              class="w-24 h-24 mx-auto mb-4 text-color-300"
            />
            <p class="text-lg text-color-600 dark:text-color-400">
              Hardware platforms coming soon! Check back later for updates.
            </p>
          </div>
        )
      }
    </div>
  </Section>

  <!-- Software Section -->
  <Section
    id="software"
    title="Software Projects"
    subtitle="Comprehensive tools for every aspect of HRI development"
  >
    <div class="max-w-6xl mx-auto">
      {
        softwareProducts.length > 0 ? (
          <div data-expandable-section data-initial-count="6">
            <div
              class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
              data-items-container
            >
              {softwareProducts.map((product, index) => (
                <div
                  data-expandable-item
                  data-index={index}
                  class={index >= 6 ? "hidden" : ""}
                >
                  <ItemCard {...product} />
                </div>
              ))}
            </div>
            {softwareProducts.length > 6 && (
              <div class="text-center mt-8">
                <button
                  data-expand-button
                  class="inline-flex items-center gap-2 px-6 py-3 bg-accent-base/10 hover:bg-accent-base/20 rounded-lg font-medium text-accent-base transition-all"
                >
                  <span data-expand-text>
                    View All {softwareProducts.length} Tools
                  </span>
                  <span data-collapse-text class="hidden">
                    Show Less
                  </span>
                  <Icon
                    name="solar:alt-arrow-down-line-duotone"
                    class="w-4 h-4 transition-transform"
                    data-expand-icon
                  />
                </button>
              </div>
            )}
          </div>
        ) : (
          <div class="text-center py-12">
            <Icon
              name="solar:code-2-line-duotone"
              class="w-24 h-24 mx-auto mb-4 text-color-300"
            />
            <p class="text-lg text-color-600 dark:text-color-400">
              Software packages coming soon! Check back later for updates.
            </p>
          </div>
        )
      }
    </div>
  </Section>

  <!-- Studies Section -->
  <Section
    id="studies"
    title="Research Projects"
    subtitle="Reproducible human-robot interaction research advancing the field"
  >
    <div class="max-w-6xl mx-auto">
      {
        featuredStudiesWithAuthors.length > 0 ? (
          <div data-expandable-section data-initial-count="6">
            <div
              class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
              data-items-container
            >
              {featuredStudiesWithAuthors.map((study, index) => (
                <article
                  data-expandable-item
                  data-index={index}
                  class={`group relative flex flex-col bg-special-lighter rounded-lg border-2 hover:border-accent-two border-accent-one/40 transition-all overflow-hidden ${
                    index >= 6 ? "hidden" : ""
                  }`}
                >
                  <div class="p-6 flex-1">
                    <div class="flex items-center gap-2 mb-3">
                      <span class="text-xs px-2 py-1 bg-accent-two/20 rounded">
                        {study.data.type}
                      </span>
                      <span class="text-xs text-color-600 dark:text-color-400">
                        {study.data.year}
                      </span>
                    </div>
                    <h3 class="font-semibold mb-2 line-clamp-2 group-hover:text-accent-one transition-colors">
                      {study.data.title}
                    </h3>
                    <p class="text-sm text-color-600 dark:text-color-400 line-clamp-3 mb-3">
                      {study.data.abstract}
                    </p>
                    <div class="flex items-center justify-between text-xs">
                      <span class="text-color-500">{study.authorString}</span>
                      <div class="flex items-center gap-1">
                        <Icon
                          name="solar:document-text-line-duotone"
                          class="w-3 h-3"
                        />
                        <span>{study.data.citations}</span>
                      </div>
                    </div>
                  </div>
                  <a
                    href={`/studies/${study.id}`}
                    class="absolute inset-0"
                    aria-label={`Read more about ${study.data.title}`}
                  />
                </article>
              ))}
            </div>
            {featuredStudiesWithAuthors.length > 6 && (
              <div class="text-center mt-8">
                <button
                  data-expand-button
                  class="inline-flex items-center gap-2 px-6 py-3 bg-accent-base/10 hover:bg-accent-base/20 rounded-lg font-medium text-accent-base transition-all"
                >
                  <span data-expand-text>
                    View All {featuredStudiesWithAuthors.length} Studies
                  </span>
                  <span data-collapse-text class="hidden">
                    Show Less
                  </span>
                  <Icon
                    name="solar:alt-arrow-down-line-duotone"
                    class="w-4 h-4 transition-transform"
                    data-expand-icon
                  />
                </button>
              </div>
            )}
          </div>
        ) : (
          <div class="text-center py-12">
            <Icon
              name="solar:document-line-duotone"
              class="w-24 h-24 mx-auto mb-4 text-color-300"
            />
            <p class="text-lg text-color-600 dark:text-color-400">
              Research studies coming soon! Check back later for updates.
            </p>
          </div>
        )
      }
    </div>
  </Section>
</PageLayout>

<script>
  // Handle expandable sections
  document.addEventListener("DOMContentLoaded", () => {
    const expandableSections = document.querySelectorAll(
      "[data-expandable-section]",
    );

    expandableSections.forEach((section) => {
      const button = section.querySelector("[data-expand-button]");
      const items = section.querySelectorAll("[data-expandable-item]");
      const expandText = section.querySelector("[data-expand-text]");
      const collapseText = section.querySelector("[data-collapse-text]");
      const icon = section.querySelector("[data-expand-icon]");
      const initialCount = parseInt(section.dataset.initialCount || "6");

      if (!button || items.length <= initialCount) {
        // Hide button if not needed
        if (button) button.style.display = "none";
        return;
      }

      let isExpanded = false;

      button.addEventListener("click", () => {
        isExpanded = !isExpanded;

        items.forEach((item, index) => {
          if (index >= initialCount) {
            if (isExpanded) {
              item.classList.remove("hidden");
            } else {
              item.classList.add("hidden");
            }
          }
        });

        // Toggle button text
        if (expandText && collapseText) {
          if (isExpanded) {
            expandText.classList.add("hidden");
            collapseText.classList.remove("hidden");
          } else {
            expandText.classList.remove("hidden");
            collapseText.classList.add("hidden");
          }
        }

        // Rotate icon
        if (icon) {
          if (isExpanded) {
            icon.style.transform = "rotate(180deg)";
          } else {
            icon.style.transform = "rotate(0deg)";
          }
        }

        // Smooth scroll to section if collapsing
        if (!isExpanded) {
          const sectionTop =
            section.getBoundingClientRect().top + window.scrollY - 100;
          window.scrollTo({
            top: sectionTop,
            behavior: "smooth",
          });
        }
      });
    });
  });
</script>
