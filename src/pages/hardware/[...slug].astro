---
import { type CollectionEntry, getCollection, render } from "astro:content";
import PageLayout from "@/layouts/Base.astro";
import DetailLayout from "@/components/DetailLayout.astro";
import { getRelatedHardware } from "@/data/hardware";

export async function getStaticPaths() {
  const hardware = await getCollection("hardware", ({ data }) => {
    // In production, exclude drafts. In development, show all.
    return import.meta.env.PROD ? data.draft !== true : true;
  });
  return hardware.map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

type Props = {
  entry: CollectionEntry<"hardware">;
};

const { entry } = Astro.props;
const { Content } = await render(entry);
const { data } = entry;

// Get related hardware
const relatedHardware = await getRelatedHardware(entry, 3);

const meta = {
  title: `${data.name} - Hardware Platform`,
  description: data.description,
};
---

<PageLayout meta={meta}>
  <DetailLayout type="hardware" data={data} relatedItems={relatedHardware}>
    <Content />
  </DetailLayout>
</PageLayout>
