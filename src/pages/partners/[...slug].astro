---
import { getCollection } from "astro:content";

/**
 * Permanent redirect for legacy partner detail routes.
 * Example: /partners/ologic-inc -> /organization/ologic-inc
 */

// Generate static paths for known partner slugs so Astro emits redirect pages for each
export async function getStaticPaths() {
  const organizations = await getCollection("organizations", ({ data }) =>
    import.meta.env.PROD ? data.draft !== true : true,
  );
  const partners = organizations.filter((org) => org.data.isPartner);

  return partners.map((entry) => ({
    // For a rest param `[...slug]`, Astro accepts a string here
    params: { slug: entry.id },
  }));
}

// Build the redirect target from the provided slug(s)
const raw = Astro.params.slug as string | string[] | undefined;
const segments = Array.isArray(raw) ? raw : raw ? [raw] : [];
const target = `/organization/${segments.join("/")}`;

// Issue a 301 Moved Permanently redirect
return Astro.redirect(target, 301);
---
