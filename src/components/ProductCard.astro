---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

export interface Props {
  name: string;
  type: 'hardware' | 'software';
  description?: string;
  image?: ImageMetadata;
  imageUrl?: string;
  status?: 'available' | 'coming-soon' | 'beta' | 'experimental' | 'discontinued';
  features?: string[];
  links?: {
    primary?: { label: string; url: string };
    github?: string;
    docs?: string;
    demo?: string;
  };
  badge?: string;
  compact?: boolean;
}

const {
  name,
  type,
  description,
  image,
  imageUrl,
  status = 'available',
  features = [],
  links,
  badge,
  compact = false
} = Astro.props;

const statusColors = {
  'available': 'bg-green-500',
  'coming-soon': 'bg-yellow-500',
  'beta': 'bg-blue-500',
  'experimental': 'bg-purple-500',
  'discontinued': 'bg-gray-500'
};

const statusLabels = {
  'available': 'Available',
  'coming-soon': 'Coming Soon',
  'beta': 'Beta',
  'experimental': 'Experimental',
  'discontinued': 'Discontinued'
};

const typeIcons = {
  hardware: 'solar:cpu-bolt-line-duotone',
  software: 'solar:code-square-line-duotone'
};
---

{compact ? (
  /* Compact view for grid layouts */
  <div class="group relative p-6 bg-special-lighter rounded-lg border border-special hover:border-accent-one/40 transition-all h-full flex flex-col">
    {/* Status badge */}
    {status !== 'available' && (
      <div class={`absolute top-4 right-4 px-2 py-1 rounded text-xs font-semibold text-white ${statusColors[status]}`}>
        {statusLabels[status]}
      </div>
    )}

    {/* Product image or icon */}
    <div class="mb-4 h-32 flex items-center justify-center">
      {(image || imageUrl) ? (
        image ? (
          <Image
            src={image}
            alt={`${name} product`}
            class="w-full h-full object-contain"
          />
        ) : (
          <img
            src={imageUrl}
            alt={`${name} product`}
            class="w-full h-full object-contain"
          />
        )
      ) : (
        <Icon name={typeIcons[type]} class="w-20 h-20 text-accent-two opacity-50" />
      )}
    </div>

    {/* Product info */}
    <div class="flex-1 flex flex-col">
      <h3 class="text-lg font-semibold mb-2 gradient-brand-text">
        {name}
      </h3>

      {badge && (
        <span class="inline-block px-2 py-1 mb-2 text-xs font-semibold bg-accent-one/10 text-accent-one rounded">
          {badge}
        </span>
      )}

      {description && (
        <p class="text-sm text-color-600 dark:text-color-400 line-clamp-3 flex-1">
          {description}
        </p>
      )}

      {/* Quick links */}
      {links && (
        <div class="mt-4 flex gap-2">
          {links.primary && (
            <a
              href={links.primary.url}
              class="text-xs font-semibold text-link hover:underline"
            >
              {links.primary.label} â†’
            </a>
          )}
          {links.docs && (
            <a
              href={links.docs}
              title="Documentation"
              class="text-color-600 hover:text-accent-one transition-colors"
            >
              <Icon name="solar:document-text-line-duotone" class="w-5 h-5" />
            </a>
          )}
          {links.github && (
            <a
              href={links.github}
              title="GitHub"
              class="text-color-600 hover:text-accent-one transition-colors"
            >
              <Icon name="mdi:github" class="w-5 h-5" />
            </a>
          )}
        </div>
      )}
    </div>
  </div>
) : (
  /* Full detailed view */
  <div class="relative p-6 bg-special-lighter rounded-lg border border-special hover:border-accent-one/40 transition-all">
    <div class="flex flex-col md:flex-row gap-6">
      {/* Product image */}
      <div class="md:w-1/3 flex-shrink-0">
        <div class="aspect-square bg-surface/50 rounded-lg p-4 flex items-center justify-center">
          {(image || imageUrl) ? (
            image ? (
              <Image
                src={image}
                alt={`${name} product`}
                class="w-full h-full object-contain"
              />
            ) : (
              <img
                src={imageUrl}
                alt={`${name} product`}
                class="w-full h-full object-contain"
              />
            )
          ) : (
            <Icon name={typeIcons[type]} class="w-32 h-32 text-accent-two opacity-50" />
          )}
        </div>
      </div>

      {/* Product details */}
      <div class="flex-1">
        <div class="flex items-start justify-between mb-4">
          <div>
            <h3 class="text-2xl font-semibold mb-2 gradient-brand-text">
              {name}
            </h3>
            <div class="flex items-center gap-2">
              <Icon name={typeIcons[type]} class="w-5 h-5 text-accent-two" />
              <span class="text-sm font-medium text-color-600 dark:text-color-400">
                {type === 'hardware' ? 'Hardware' : 'Software'}
              </span>
              {badge && (
                <span class="px-2 py-1 text-xs font-semibold bg-accent-one/10 text-accent-one rounded">
                  {badge}
                </span>
              )}
            </div>
          </div>
          {status !== 'available' && (
            <span class={`px-3 py-1 rounded-full text-xs font-semibold text-white ${statusColors[status]}`}>
              {statusLabels[status]}
            </span>
          )}
        </div>

        {description && (
          <p class="text-color-600 dark:text-color-400 mb-4">
            {description}
          </p>
        )}

        {features.length > 0 && (
          <div class="mb-4">
            <h4 class="text-sm font-semibold mb-2">Key Features:</h4>
            <ul class="grid grid-cols-1 md:grid-cols-2 gap-2">
              {features.map((feature) => (
                <li class="flex items-start gap-2 text-sm text-color-600 dark:text-color-400">
                  <Icon name="solar:check-circle-bold" class="w-4 h-4 text-accent-two flex-shrink-0 mt-0.5" />
                  <span>{feature}</span>
                </li>
              ))}
            </ul>
          </div>
        )}

        {/* Action buttons */}
        {links && (
          <div class="flex flex-wrap gap-3 mt-6 pt-6 border-t border-special">
            {links.primary && (
              <a
                href={links.primary.url}
                class="inline-flex items-center justify-center px-4 py-2 rounded-lg font-semibold gradient-brand-horizontal text-surface hover:brightness-110 transition-all"
              >
                {links.primary.label}
              </a>
            )}
            {links.docs && (
              <a
                href={links.docs}
                class="inline-flex items-center gap-2 px-4 py-2 rounded-lg border border-special hover:border-accent-one/40 transition-all"
              >
                <Icon name="solar:document-text-line-duotone" class="w-4 h-4" />
                <span>Documentation</span>
              </a>
            )}
            {links.github && (
              <a
                href={links.github}
                class="inline-flex items-center gap-2 px-4 py-2 rounded-lg border border-special hover:border-accent-one/40 transition-all"
              >
                <Icon name="mdi:github" class="w-4 h-4" />
                <span>GitHub</span>
              </a>
            )}
            {links.demo && (
              <a
                href={links.demo}
                class="inline-flex items-center gap-2 px-4 py-2 rounded-lg border border-special hover:border-accent-one/40 transition-all"
              >
                <Icon name="solar:play-bold" class="w-4 h-4" />
                <span>Try Demo</span>
              </a>
            )}
          </div>
        )}
      </div>
    </div>
  </div>
)}
