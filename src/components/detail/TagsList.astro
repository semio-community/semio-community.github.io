---
import { Icon } from "astro-icon/components";
import InfoCard from "./InfoCard.astro";

export interface Props {
  title?: string;
  tags: string[];
  baseUrl: string;
  icon?: string;
  tagIcon?: string;
  variant?: "primary" | "secondary" | "tertiary" | "default";
  className?: string;
}

const {
  title = "TAGS",
  tags,
  baseUrl,
  icon,
  tagIcon = "solar:hashtag-line-duotone",
  variant = "secondary",
  className = "",
} = Astro.props;

// Define variant styles for tag chips
const variantStyles = {
  primary: "bg-accent-base/10 hover:bg-accent-base/20 text-accent-base",
  secondary: "bg-accent-two/10 hover:bg-accent-two/20 text-accent-base",
  tertiary: "bg-accent-one/10 hover:bg-accent-one/20 text-accent-base",
  default: "bg-surface-lighter hover:bg-surface text-accent-base",
};

// Ensure baseUrl ends with /
const normalizedBaseUrl = baseUrl.endsWith("/") ? baseUrl : `${baseUrl}/`;
---

{
  tags && tags.length > 0 && (
    <div class={`mb-8 ${className}`}>
      <InfoCard title={title}>
        <div class="flex flex-wrap gap-2">
          {tags.map((tag) => (
            <a
              href={`${normalizedBaseUrl}${tag}`}
              class={`inline-flex items-center gap-1 px-3 py-1.5 rounded-lg text-sm transition-all duration-200 hover:scale-105 hover:shadow-md ${variantStyles[variant]}`}
              title={`View all items tagged with "${tag}"`}
            >
              <Icon name={tagIcon} class="w-3 h-3" />
              <span>{tag}</span>
            </a>
          ))}
        </div>
      </InfoCard>
    </div>
  )
}
