---
export interface Props {
  className?: string;
  showHero?: boolean;
  showHeader?: boolean;
  showActions?: boolean;
  showContributors?: boolean;
  showSidebar?: boolean;
  showRelated?: boolean;
}

const {
  className = "",
  showHero = true,
  showHeader = true,
  showActions = true,
  showContributors = true,
  showSidebar = true,
  showRelated = true,
} = Astro.props;

// Check which slots have content
const hasHero = showHero && Astro.slots.has("hero");
const hasHeader = showHeader && Astro.slots.has("header");
const hasActions = showActions && Astro.slots.has("actions");
const hasContributors = showContributors && Astro.slots.has("contributors");
const hasSidebar = showSidebar && Astro.slots.has("sidebar");
const hasRelated = showRelated && Astro.slots.has("related");
const hasTopActions = Astro.slots.has("top-actions");
const hasBreadcrumbs = Astro.slots.has("breadcrumbs");
const hasMetaSection = Astro.slots.has("meta-section");

// Determine if we should show the header section
const shouldShowHeader = !hasHero && hasHeader;
---

<article
  class={`detail-layout ${className} ${hasHero ? "pt-16 md:pt-20 lg:pt-4" : "pt-20 lg:pt-4"}`}
>
  <!-- Breadcrumbs (optional, above everything) -->
  {
    hasBreadcrumbs && (
      <nav class="mb-6 px-4 md:px-8 lg:px-12" aria-label="Breadcrumb">
        <slot name="breadcrumbs" />
      </nav>
    )
  }

  <!-- Hero Section with Image Overlay -->
  {hasHero && <slot name="hero" />}

  <!-- Header Section (when no hero) -->
  {
    shouldShowHeader && (
      <div class="px-4 md:px-8 lg:px-12">
        <slot name="header" />
      </div>
    )
  }

  <!-- Top Actions (optional, for special actions that should be prominent) -->
  {
    hasTopActions && (
      <div class="mb-6 px-4 md:px-8 lg:px-12">
        <slot name="top-actions" />
      </div>
    )
  }

  <!-- Contributors Section -->
  {
    hasContributors && (
      <div class="px-4 md:px-8 lg:px-12">
        <slot name="contributors" />
      </div>
    )
  }

  <!-- Action Buttons Section -->
  {
    hasActions && (
      <div class="px-4 md:px-8 lg:px-12">
        <slot name="actions" />
      </div>
    )
  }

  <!-- Meta Section (optional, for additional metadata that doesn't fit in sidebar) -->
  {
    hasMetaSection && (
      <div class="mb-8 p-6 bg-surface-lighter rounded-xl border border-accent-one/10 mx-4 md:mx-8 lg:mx-12">
        <slot name="meta-section" />
      </div>
    )
  }

  <!-- Main Content Grid -->
  <div
    class={`grid grid-cols-1 ${hasSidebar ? "lg:grid-cols-3" : ""} gap-8 px-4 md:px-8 lg:px-12`}
  >
    <!-- Main Content Area -->
    <div class={hasSidebar ? "lg:col-span-2" : "w-full"}>
      <!-- Before Content Slot (optional) -->
      {
        Astro.slots.has("before-content") && (
          <div class="mb-6">
            <slot name="before-content" />
          </div>
        )
      }

      <!-- Main Content (MDX/Markdown content) -->
      <div class="prose prose-lg dark:prose-invert max-w-none">
        <slot />
        <!-- Default slot for main content -->
      </div>

      <!-- After Content Slot (optional) -->
      {
        Astro.slots.has("after-content") && (
          <div class="mt-6">
            <slot name="after-content" />
          </div>
        )
      }

      <!-- Mobile Sidebar (shows below content on mobile when sidebar exists) -->
      {
        hasSidebar && (
          <aside class="lg:hidden mt-8">
            <slot name="sidebar" />
          </aside>
        )
      }
    </div>

    <!-- Desktop Sidebar -->
    {
      hasSidebar && (
        <aside class="hidden lg:block lg:col-span-1">
          <div class="sticky top-24">
            <slot name="sidebar" />
          </div>
        </aside>
      )
    }
  </div>

  <!-- Additional Content Sections (optional) -->
  {
    Astro.slots.has("additional-sections") && (
      <div class="mt-12 px-4 md:px-8 lg:px-12">
        <slot name="additional-sections" />
      </div>
    )
  }

  <!-- Related Items Section -->
  {
    hasRelated && (
      <div class="px-4 md:px-8 lg:px-12">
        <slot name="related" />
      </div>
    )
  }

  <!-- Footer Section (optional, for citations, references, etc.) -->
  {
    Astro.slots.has("footer") && (
      <footer class="mt-12 pt-8 border-t border-accent-one/10 px-4 md:px-8 lg:px-12">
        <slot name="footer" />
      </footer>
    )
  }
</article>

<style>
  /* Ensure consistent spacing and styling */
  .detail-layout {
    width: 100%;
  }

  /* Sticky sidebar adjustments */
  .sticky {
    max-height: calc(100vh - 6rem);
    overflow-y: auto;
    scrollbar-width: thin;
    scrollbar-color: var(--color-accent-one) transparent;
  }

  .sticky::-webkit-scrollbar {
    width: 6px;
  }

  .sticky::-webkit-scrollbar-track {
    background: transparent;
  }

  .sticky::-webkit-scrollbar-thumb {
    background-color: var(--color-accent-one);
    border-radius: 3px;
    opacity: 0.5;
  }

  .sticky::-webkit-scrollbar-thumb:hover {
    opacity: 1;
  }
</style>
