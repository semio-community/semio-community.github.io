---
import { Icon } from "astro-icon/components";

export interface Props {
  href: string;
  text: string;
  icon?: string;
  external?: boolean;
  variant?: "default" | "primary" | "secondary" | "tertiary";
  className?: string;
}

const {
  href,
  text,
  icon,
  external = false,
  variant = "default",
  className = "",
} = Astro.props;

// Automatically detect external links if not specified
const isExternal = external || href.startsWith("http");

// Determine the icon based on the link text if not provided
const linkIcon = icon || getLinkIcon(text, href);

function getLinkIcon(linkText: string, linkHref: string): string {
  const textLower = linkText.toLowerCase();
  const hrefLower = linkHref.toLowerCase();

  // Website/Homepage
  if (textLower.includes("website") || textLower.includes("homepage")) {
    return "solar:global-line-duotone";
  }

  // GitHub
  if (textLower.includes("github") || hrefLower.includes("github.com")) {
    return "simple-icons:github";
  }

  // Documentation
  if (textLower.includes("documentation") || textLower.includes("docs")) {
    return "solar:document-text-line-duotone";
  }

  // Demo
  if (textLower.includes("demo")) {
    return "solar:play-circle-line-duotone";
  }

  // Purchase/Buy
  if (textLower.includes("purchase") || textLower.includes("buy")) {
    return "solar:cart-3-line-duotone";
  }

  // Rental
  if (textLower.includes("rental") || textLower.includes("rent")) {
    return "solar:calendar-mark-line-duotone";
  }

  // PyPI
  if (textLower.includes("pypi") || hrefLower.includes("pypi.org")) {
    return "simple-icons:pypi";
  }

  // npm
  if (textLower.includes("npm") || hrefLower.includes("npmjs.com")) {
    return "simple-icons:npm";
  }

  // Registration
  if (textLower.includes("register") || textLower.includes("registration")) {
    return "solar:user-plus-rounded-line-duotone";
  }

  // Tickets
  if (textLower.includes("ticket")) {
    return "solar:ticket-line-duotone";
  }

  // Video/Stream
  if (
    textLower.includes("watch") ||
    textLower.includes("stream") ||
    textLower.includes("video")
  ) {
    return "solar:video-library-line-duotone";
  }

  // Download
  if (textLower.includes("download")) {
    return "solar:download-minimalistic-line-duotone";
  }

  // API
  if (textLower.includes("api")) {
    return "solar:code-square-line-duotone";
  }

  // Social Media
  if (hrefLower.includes("twitter.com") || hrefLower.includes("x.com")) {
    return "simple-icons:x";
  }
  if (hrefLower.includes("linkedin.com")) {
    return "simple-icons:linkedin";
  }
  if (hrefLower.includes("facebook.com")) {
    return "simple-icons:facebook";
  }
  if (hrefLower.includes("instagram.com")) {
    return "simple-icons:instagram";
  }
  if (hrefLower.includes("youtube.com")) {
    return "simple-icons:youtube";
  }
  if (hrefLower.includes("discord")) {
    return "simple-icons:discord";
  }
  if (hrefLower.includes("slack")) {
    return "simple-icons:slack";
  }

  // Email
  if (hrefLower.startsWith("mailto:")) {
    return "solar:letter-line-duotone";
  }

  // Phone
  if (hrefLower.startsWith("tel:")) {
    return "solar:phone-calling-line-duotone";
  }

  // Default external or internal link
  return isExternal
    ? "solar:arrow-right-up-line-duotone"
    : "solar:link-round-angle-line-duotone";
}

const variantClasses = {
  default:
    "bg-accent-base/10 outline outline-accent-base text-accent-base hover:bg-accent-base/90 hover:text-surface",
  primary:
    "bg-accent-two/10 outline outline-accent-two text-accent-base hover:bg-accent-two hover:text-surface",
  secondary:
    "bg-accent-one/10 outline outline-accent-one text-accent-base hover:bg-accent-one hover:text-surface",
  tertiary:
    "bg-accent-three/10 outline outline-accent-three text-accent-base hover:bg-accent-three hover:text-surface",
};

const buttonClass = `
  inline-flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium
  transition-all duration-200 hover:scale-[1.02] active:scale-[0.98]
  ${variantClasses[variant]}
  ${className}
`.trim();
---

<a
  href={href}
  target={isExternal ? "_blank" : undefined}
  rel={isExternal ? "noopener noreferrer" : undefined}
  class={buttonClass}
>
  <Icon name={linkIcon} class="w-4 h-4" />
  <span>{text}</span>
  {
    isExternal && variant !== "primary" && (
      <Icon
        name="solar:arrow-right-up-line-duotone"
        class="w-3 h-3 ml-1 opacity-60"
      />
    )
  }
</a>

<style>
  a {
    text-decoration: none;
    border: 1px solid transparent;
  }

  a:hover {
    border-color: rgb(var(--color-accent-one) / 0.2);
    box-shadow: 0 2px 8px rgb(var(--color-accent-one) / 0.1);
  }

  a:focus-visible {
    outline: 2px solid rgb(var(--color-accent-base));
    outline-offset: 2px;
  }
</style>
