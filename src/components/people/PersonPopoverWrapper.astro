---
import { getEntry } from "astro:content";
import { PersonPopover } from "./PersonPopover";
import { getPerson } from "@/data/people";

interface Props {
  personId: string;
  role?: string;
}

const { personId, role } = Astro.props;
const personEntry = await getPerson(personId);

const person =
  personEntry && personEntry.data
    ? {
        ...personEntry.data,
        id: personEntry.id,
      }
    : null;

// Get current affiliation details if available
let currentAffiliation:
  | { organizationId: string; partnerName?: string; role: string }
  | undefined;
if (person?.affiliations) {
  const current = person.affiliations.find((aff) => !aff.endDate);
  if (current) {
    const organization = await getEntry(
      "organizations",
      current.organizationId,
    );
    currentAffiliation = {
      organizationId: current.organizationId,
      partnerName: organization?.data.name || current.organizationId,
      role: current.role,
    };
  }
}
---

<PersonPopover
  client:load
  person={person}
  personId={personId}
  role={role}
  currentAffiliation={currentAffiliation}
/>
