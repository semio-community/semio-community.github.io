---
import { Icon } from "astro-icon/components";

interface Props {
  id?: string;
  title: string;
  subtitle?: string;
  icon?: string;
  count?: number;
  className?: string;
  gridClass?: string;
  // If true, render an empty state instead of the grid content
  empty?: boolean;
  emptyIcon?: string;
  emptyMessage?: string;
}

const {
  id,
  title,
  subtitle,
  icon,
  count,
  className,
  gridClass = "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6",
  empty = false,
  emptyIcon = "solar:buildings-2-line-duotone",
  emptyMessage = "Nothing to show yet. Check back soon.",
} = Astro.props as Props;
---

<div id={id} class={`mb-10 ${className || ""}`.trim()}>
  <div class="flex items-center gap-3 mb-2">
    {icon && <Icon name={icon} class="w-6 h-6 text-accent-two" />}
    <h3 class="text-xl font-semibold">{title}</h3>
    {
      typeof count === "number" && (
        <span class="text-sm px-2 py-1 bg-accent-one/20 rounded">{count}</span>
      )
    }
  </div>

  {
    subtitle && (
      <p class="text-sm text-color-600 dark:text-color-400 mb-6">{subtitle}</p>
    )
  }

  {
    empty ? (
      <div class="text-center py-12">
        <Icon name={emptyIcon} class="w-24 h-24 mx-auto mb-4 text-color-300" />
        <p class="text-lg text-color-600 dark:text-color-400">{emptyMessage}</p>
        <slot name="empty-actions" />
      </div>
    ) : (
      <div class={`subsection-grid ${gridClass}`}>
        <slot />
      </div>
    )
  }
</div>
