---
import { NavigationMenuComponent } from "@/components/navigation/NavigationMenu.tsx";
import { siteConfig, menuLinks } from "@/site.config";
import { homeUrl, url } from "@/utils/url";
import { getAllHardware } from "@/data/hardware";
import { getAllSoftware } from "@/data/software";
import { getFeaturedResearch } from "@/data/research";
import { SearchApp } from "@/components/search/SearchApp.tsx";

// Fetch data for navigation and simplify for React component
const allHardware = await getAllHardware();
const featuredResearch = await getFeaturedResearch();
const allSoftware = await getAllSoftware();

// Simplify data for serialization to React component
const hardwareItems = allHardware.map((item) => ({
  id: item.id,
  name: item.data.name,
  shortDescription: item.data.shortDescription,
  status: item.data.status,
}));

// Simplify software data for React component
const softwareItems = allSoftware.map((sw) => ({
  id: sw.id,
  name: sw.data.name,
  shortDescription: sw.data.shortDescription,
  status: sw.data.status,
}));

// Simplify research data for React component
const researchItems = featuredResearch.map((entry) => {
  const publishDate = entry.data.publishDate
    ? new Date(entry.data.publishDate)
    : null;
  const year =
    publishDate && !Number.isNaN(publishDate.getTime())
      ? publishDate.getFullYear()
      : (entry.data as { year?: number }).year;

  return {
    id: entry.id,
    title: entry.data.title,
    type: entry.data.type,
    year,
  };
});

// Define menu sections
const menuSections = {
  "/projects/": [
    { title: "Hardware Projects", href: "/projects/#hardware" },
    { title: "Software Projects", href: "/projects/#software" },
    { title: "Research Projects", href: "/projects/#research" },
  ],
  "/services/": [
    { title: "Hardware Services", href: "/services/#hardware" },
    { title: "Software Services", href: "/services/#software" },
    { title: "Research Services", href: "/services/#research" },
    { title: "Benefits", href: "/services/#benefits" },
    { title: "Process", href: "/services/#process" },
    { title: "Get Started", href: "/services/#get-started" },
  ],

  "/events/": [
    { title: "Featured Events", href: "/events/#featured" },
    { title: "Upcoming Events", href: "/events/#upcoming" },
    { title: "Past Events", href: "/events/#past" },
    { title: "Partner for an Event", href: "/events/#events-contribute" },
  ],
  "/partners/": [
    { title: "Featured Partners", href: "/partners/#featured-partners" },
    { title: "Current Partners", href: "/partners/#current-partners" },
    { title: "Partner Benefits", href: "/partners/#benefits" },
    { title: "Partnership Areas", href: "/partners/#categories" },
    { title: "Become a Partner", href: "/partners/#become-partner" },
  ],
};
---

<style>
  @import "@/components/navigation/navigation-menu.css";
</style>

<header
  id="main-header"
  class="fixed left-0 right-0 z-50 lg:sticky top-0 h-[72px] w-full bg-surface/80 backdrop-blur-xl lg:bg-surface/85 lg:backdrop-blur-lg border-b border-accent-base/10 shadow-[0_2px_8px_-3px_rgba(0,0,0,0.07)] dark:shadow-[0_2px_8px_-3px_rgba(0,0,0,0.3)]"
>
  <!-- Background
			TODO: This approach is not optimal and requires improvements.
  			- Too many absolutely positioned elements can affect performance.
  		-->
  <div
    class="md:hidden absolute top-0 left-1/2 -ml-[50vw] w-screen min-h-screen pointer-events-none blur-2xl"
  >
    <div
      class="absolute top-[-90%] right-[25%] w-[75%] h-full bg-gradient-to-b from-orange-500 via-amber-400 to-transparent rounded-full opacity-40 dark:opacity-5"
    >
    </div>
    <div
      class="absolute top-[-90%] left-[25%] w-[75%] h-full bg-gradient-to-b from-amber-400 via-teal-400 to-transparent rounded-full opacity-40 dark:opacity-5"
    >
    </div>
    <div
      class="absolute top-[-85%] right-[25%] w-[55%] h-full bg-gradient-to-b from-teal-400 via-orange-500 to-transparent rounded-full opacity-40 dark:opacity-5"
    >
    </div>
    <div
      class="absolute top-[-85%] left-[25%] w-[55%] h-full bg-gradient-to-b from-orange-500 via-amber-400 to-transparent rounded-full opacity-40 dark:opacity-5"
    >
    </div>
    <div
      class="absolute top-[-75%] left-[-25%] w-[65%] h-full bg-gradient-to-b from-teal-400 via-amber-400 to-transparent rounded-full opacity-30 dark:opacity-5"
    >
    </div>
    <div
      class="absolute top-[-75%] right-[-25%] w-[65%] h-full bg-gradient-to-b from-amber-400 via-teal-400 to-transparent rounded-full opacity-30 dark:opacity-5"
    >
    </div>
    <div
      class="absolute top-[-85%] left-[-30%] w-[85%] h-full bg-gradient-to-b from-orange-500 via-teal-400 to-transparent rounded-full opacity-60 dark:opacity-5"
    >
    </div>
    <div
      class="absolute top-[-85%] right-[-30%] w-[85%] h-full bg-gradient-to-b from-teal-400 via-orange-500 to-transparent rounded-full opacity-60 dark:opacity-5"
    >
    </div>
  </div>

  <!-- Content container with max-width constraint -->
  <div
    class="w-full h-full xl:max-w-6xl xl:mx-auto px-2 sm:px-4 md:px-6 lg:px-8 flex items-center justify-between"
  >
    <!-- Logo section -->
    <a
      aria-label={siteConfig.title}
      aria-current={Astro.url.pathname === "/" ? "page" : false}
      class="group flex items-center sm:relative h-8 w-8 md:p-2 rounded-lg justify-center hover:bg-accent-base/10 transition-colors lg:w-auto lg:justify-start"
      href={homeUrl()}
    >
      <!-- Logo -->
      <!--
				<div class="pt-1.5">
					<svg class="inline-block size-8 fill-current text-accent-base drop-shadow-[0px_2.5px_2.5px_rgba(0,0,0,0.35)]">
						<use href="/brand.svg#brand"></use>
					</svg>
				</div>
				-->
      <div title={siteConfig.title}>
        <svg
          class="inline-block size-5 fill-current text-accent-base dark:text-accent-two drop-shadow-[0px_2.5px_2.5px_rgba(0,0,0,0.15)]"
        >
          <use href={url("brand.svg#brand")}></use>
        </svg>
      </div>

      <strong
        class="'max-[320px]:hidden' lowercase text-base hidden lg:block z-10 mb-0.5 ms-2 lg:text-base xl:text-xl hover:opacity-90 whitespace-nowrap"
      >
        {siteConfig.title}
      </strong>
    </a>

    <!-- Desktop Navigation with Radix UI -->
    <nav class="hidden md:flex ml-auto mr-2 lg:mr-6 items-center">
      <NavigationMenuComponent
        client:load
        currentPath={Astro.url.pathname}
        menuLinks={menuLinks}
        hardwareItems={hardwareItems}
        softwareItems={softwareItems}
        researchItems={researchItems}
        menuSections={menuSections}
        urlPrefix=""
      />
    </nav>

    <!-- Right side buttons and mobile menu -->
    <div class="flex items-center gap-x-1 md:gap-x-2">
      <div id="buttons-panel" class="hidden md:flex space-x-1 md:space-x-2">
        <button
          class="hidden md:flex relative items-center justify-center select-none rounded-lg transition-colors bg-color-100 text-accent-base hover:bg-accent-base/10 focus:outline-2 focus:outline-accent-two outline-offset-2 h-8 w-8"
          type="button"
          aria-label="Toggle theme"
          onclick="(function(){var root=document.documentElement;var isDark=root.getAttribute('data-theme')==='dark';var ev=new CustomEvent('theme-change',{detail:{theme:isDark?'light':'dark'}});document.dispatchEvent(ev);})()"
        >
          <svg
            aria-hidden="true"
            class="absolute w-5 h-5 opacity-100 scale-100 transition-all dark:opacity-0 dark:scale-0"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <circle cx="12" cy="12" r="4" stroke="currentColor" stroke-width="2"
            ></circle>
            <line
              x1="12"
              y1="2"
              x2="12"
              y2="5"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"></line>
            <line
              x1="12"
              y1="19"
              x2="12"
              y2="22"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"></line>
            <line
              x1="2"
              y1="12"
              x2="5"
              y2="12"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"></line>
            <line
              x1="19"
              y1="12"
              x2="22"
              y2="12"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"></line>
            <line
              x1="4.22"
              y1="4.22"
              x2="6.34"
              y2="6.34"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"></line>
            <line
              x1="17.66"
              y1="17.66"
              x2="19.78"
              y2="19.78"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"></line>
            <line
              x1="17.66"
              y1="6.34"
              x2="19.78"
              y2="4.22"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"></line>
            <line
              x1="4.22"
              y1="19.78"
              x2="6.34"
              y2="17.66"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"></line>
          </svg>
          <svg
            aria-hidden="true"
            class="absolute w-5 h-5 opacity-0 scale-0 transition-all dark:opacity-100 dark:scale-100"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M21 12.79A9 9 0 1 1 11.21 3a7 7 0 0 0 9.79 9.79Z"
              stroke="currentColor"
              stroke-width="2"
              fill="none"></path>
          </svg>
        </button>
      </div>

      <!-- Centralized Search + Mobile Nav (React island) -->
      <SearchApp
        client:load
        menuLinks={menuLinks}
        currentPath={Astro.url.pathname}
        urlPrefix=""
        menuSections={menuSections}
      />
    </div>
  </div>
</header>
